*operator-exec_command.txt*	コマンドを実行する operator


==============================================================================
概要						*operator-exec_command-introduction*

任意のコマンドを実行するための operator です。

- Requires
  operator-user - https://github.com/kana/vim-operator-user


==============================================================================
インターフェース				*operator-exec_command-example*

>
	" :help {motion} する
	nmap <expr> <Space>* operator#exec_command#mapexpr(":help %t")

	" {motion} の範囲を任意の1文字で置き換える
	" operator の入力後に置き換える位置文字を入力する
	nmap <expr> <A-r>
	\	operator#exec_command#mapexpr(":normal! `[v`]r" . nr2char(getchar()))

	" {motion} の範囲を任意の1文字で置き換える
	" {motion} の入力後に置き換える位置文字を入力する
	nmap <expr> <A-r>
	\	operator#exec_command#mapexpr('execute ":normal! `[%v`]r" . nr2char(getchar())')
<


==============================================================================
インターフェース				*operator-exec_command-interface*

------------------------------------------------------------------------------
関数						*operator-exec_command-functions*

operator#exec_command#mapexpr({format})		*operator#exec_command#mapexpr()*
	{format} の文字列を |:execute| します。
	{format} には以下の変換指示子が使用できます
	"%t" : 入力した {motion} の範囲のテキスト文字列
	"%v" : {motion} のビジュアルモード('v' や 'V' など)
Example: >
	" :help {motion} する
	nmap <expr> <Space>* operator#exec_command#mapexpr(":help %t")
<

	NOTE: "%%" した場合に "%" に置き換わるわけではないので注意してください

				*operator#exec_command#mapexpr_v_keymapping()*
operator#exec_command#mapexpr_v_keymapping({operator}[, {noremap}])
	{motion} の範囲のビジュアルモードに対して {operator} を適用させます。
	これは
>
	operator#exec_command#mapexpr(":normal! `[%v`]{operator}")
<
	とするのと同等です。
	また、{noremap} に 1 が設定されていれば {operator} のマップは展開さ
	れません。0 が設定されていればキーのマップが展開されます。
	{noremap} がない場合は 0 になります。

					*operator#exec_command#mapexpr_gn()*
operator#exec_command#mapexpr_gn({operator}[, {noremap}])
	{motion} のテキストを検索レジスタ(|@/|) に保存したあとに {operator}gn
	を実行する operator のキーマッピングを返します。
	また、{noremap} に 1 が設定されていれば {operator} のマップは展開さ
	れません。0 が設定されていればキーのマップが展開されます。
	{noremap} がない場合は 0 になります。
	これは {operator} を dot repeat したい場合に利用する事ができます。
>
	" operator c を連続して適用させる
	nmap <expr> C operator#exec_command#mapexpr_gn("c", 1)
<


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
